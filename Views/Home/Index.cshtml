@{
    ViewData["Title"] = "Get Started";
}

<style>
    html, body {
        height: 100%;
    }
    .container {
        height: 100%;
        display: flex;
        justify-items: center;
        align-items: center;
    }
    .main {
        background-color: transparent;
    }
    #timer {
        width: 100%;
        height: 5px;
        top: 56px;
        background-color: #6c757d;
    }
    .slide {
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
    }
    .fadeOut {
        opacity: 0;
        transition: 2000ms;
    }
</style>

<!-- has to be written this way to avoid whitespace in the dom -->
<div id="slideshow"><div class="slide"></div><div class="slide"></div></div>
<div class="fixed-top" id="timer"></div>
<partial name="_Login.cshtml" />
<partial name="_Register.cshtml" />

<!-- Smooth background fading slideshow -->
<script>
   // reverse the child elements in a parent element
    const slideshow = document.getElementById("slideshow");
    function reverseNodes() {
        // make the previous pane transparent
        slideshow.childNodes[1].classList.add("fadeOut");
        setTimeout( () => {
            for(let i=slideshow.childNodes.length-1; i>=0; i--) {
                let node = slideshow.removeChild(slideshow.childNodes[i]);
                node.classList.remove("fadeOut");
                slideshow.appendChild(node);
            }
        }, 2000) 
    }

    // function to set a random image from an array of images
    // feels convenient to write this as a closure
    function getImg(arr, element) {
        var i = 0;
        function shuffle(arr) {
            for(let i=0; i<arr.length; i++) {
                let rI = Math.floor(Math.random()*arr.length);
                [arr[i], arr[rI]] = [arr[rI], arr[i]];
            }
        }
        shuffle(arr);
        return function() {
            if(i >= arr.length) {
                shuffle(arr);
                i = 0;
            }
            document.querySelector(".slide").style.backgroundImage = `url(${arr[i++]})`;
        }
    }
    const nextBg = getImg([
        "/img/bg/castle.jpg",
        "/img/bg/city.jpg",
        "/img/bg/cliff.jpg",
        "/img/bg/field.jpg",
        "/img/bg/island.jpg",
        "/img/bg/lavender.jpg",
        "/img/bg/sea.jpg",
        "/img/bg/snow.jpg"
    ], document.querySelector("body"));
    nextBg();
    reverseNodes();

    // function create a timer with animated bar
    const time = 10000; // time in ms until the next image should load
    let start = null;
    function fill(timestamp) {
        function applyGradient(p, element) {
            element.style.background = `linear-gradient(90deg, #17a2b8 ${p}%, #6c757d ${p}%)`;
        }
        if (!start) {
            start = timestamp;
        }
        let progress = timestamp - start;
        applyGradient((progress/time)*100, document.getElementById("timer"))
        if (progress < time) {
            window.requestAnimationFrame(fill);
        } else {
            start = null;
            applyGradient(0, document.getElementById("timer"))
            nextBg();
            window.requestAnimationFrame(fill);
            reverseNodes();
        }
    }
    window.requestAnimationFrame(fill);
</script>